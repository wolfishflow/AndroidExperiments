plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id("com.apollographql.apollo").version("$apollo_version")
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

String getGithubToken() {
    Properties properties = new Properties()
    if (project.rootProject.file("local.properties").canRead()) {
        properties.load(new FileInputStream(project.rootProject.file("local.properties")))
    }

    if (properties != null) {
        String githubToken = properties.getProperty("github_token")

        if (githubToken != null) {
            return githubToken
        }
    }

    return ""
}

def githubToken = getGithubToken()

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.example.androidexperiments"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "GITHUB_TOKEN", "\"$githubToken\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


}


dependencies {
    def lifecycle_version = "2.2.0"
    def activity_version = "1.1.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //DI
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"

    //Apollo
    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$apollo_version"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"

    //Viewmodel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.activity:activity-ktx:$activity_version"
    //Logging with Pretty Print
    implementation('com.github.ihsanbal:LoggingInterceptor:3.1.0') {
        exclude group: 'org.json', module: 'json'
    }
}

apollo {
    // instruct the compiler to generate Kotlin models
    schemaFile = file("/src/main/java/com/example/androidexperiments/data/graphql/schema.json")
    generateKotlinModels.set(true)
}